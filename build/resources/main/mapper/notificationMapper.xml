<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssd.springcooler.gachiwatch.dao.mybatis.mapper.NotificationMapper">
    <cache/>

    <!-- Content 조인을 포함한 Notification resultMap --> <!--id로 검색해서 Content 객체를 조회하는 것이라면 조인을 사용해야함-->
    <resultMap id="NotificationWithContentMap" type="Notification">
        <id property="notificationId" column="notification_id" />
        <result property="memberId" column="member_id" />
        <result property="sentAt" column="sent_date" />
        <result property="substance" column="substance" />

        <association property="content" javaType="Content">
            <id property="contentId" column="content_id" />
            <result property="title" column="title" />
        </association>
    </resultMap>

    <!-- 알림 생성 -->
    <insert id="createNotification" parameterType="Notification">
        INSERT INTO notification ( notification_id, member_id, content_id, sent_date, substance )
        VALUES (#{notificationId}, #{memberId}, #{content.contentId}, #{sentAt}, #{substance})
    </insert>

    <!-- 알림 삭제 -->
    <delete id="removeNotification" parameterType="int">
        DELETE FROM notification
        WHERE notification_id = #{notificationId}
    </delete>

    <!-- 알림 ID로 알림 1건 조회 (Content 조인 포함) -->
    <select id="getNotification" parameterType="int" resultMap="NotificationWithContentMap">
        SELECT
            n.notification_id, n.member_id, n.content_id, n.sent_date, n.substance,
            c.content_id AS content_id, c.title
        FROM
            notification n
                JOIN
            content c ON n.content_id = c.content_id
        WHERE
            n.notification_id = #{notificationId}
    </select>

    <!-- 사용자 ID로 알림 목록 조회 (Content 조인 포함) -->
    <select id="selectNotificationsWithContentByMemberId" parameterType="int" resultMap="NotificationWithContentMap">
        SELECT
            n.notification_id, n.member_id, n.content_id, n.sent_date, n.substance,
            c.content_id AS content_id, c.title
        FROM
            notification n
                JOIN
            content c ON n.content_id = c.content_id
        WHERE
            n.member_id = #{memberId}
        ORDER BY
            n.sent_date DESC
    </select>

</mapper>